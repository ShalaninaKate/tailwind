/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
.custom-checkbox__field:checked + .custom-checkbox__content::after {
  opacity: 1;
}
.custom-checkbox__field:focus + .custom-checkbox__content::before {
  outline: 2px solid #f00;
  outline-offset: 2px;
}
.custom-checkbox__field:disabled + .custom-checkbox__content {
  opacity: 0.4;
  pointer-events: none;
}
@font-face {
  font-family: "Satoshi";
  src: url("../fonts/../fonts/Satoshi-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Satoshi", "sans-serif";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-lg: 0.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --color-main: #1f2226;
    --color-blue: #2752e7;
    --color-bg: #f2f5fa;
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type=button], [type=reset], [type=submit]),
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden=until-found])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .-left-full {
    left: -100%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[-100\%\] {
    left: -100%;
  }
  .z-2 {
    z-index: 2;
  }
  .z-5 {
    z-index: 5;
  }
  .z-100 {
    z-index: 100;
  }
  .container {
    width: 100%;
    @media (width >= 30rem) {
      max-width: 30rem;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-4\.5 {
    height: calc(var(--spacing) * 4.5);
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-\[18px\] {
    height: 18px;
  }
  .h-full {
    height: 100%;
  }
  .min-h-15 {
    min-height: calc(var(--spacing) * 15);
  }
  .min-h-\[5rem\] {
    min-height: 5rem;
  }
  .min-h-\[35px\] {
    min-height: 35px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-4\.25 {
    width: calc(var(--spacing) * 4.25);
  }
  .w-7\.5 {
    width: calc(var(--spacing) * 7.5);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-\[17px\] {
    width: 17px;
  }
  .w-\[30px\] {
    width: 30px;
  }
  .w-\[45px\] {
    width: 45px;
  }
  .w-\[260px\] {
    width: 260px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-65 {
    max-width: calc(var(--spacing) * 65);
  }
  .max-w-291\.5 {
    max-width: calc(var(--spacing) * 291.5);
  }
  .max-w-\[1920px\] {
    max-width: 1920px;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .grid-cols-\[17\.1875rem_1fr_auto\] {
    grid-template-columns: 17.1875rem 1fr auto;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-\[1\.25rem\] {
    gap: 1.25rem;
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-y-10 {
    row-gap: calc(var(--spacing) * 10);
  }
  .justify-self-center {
    justify-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overscroll-none {
    overscroll-behavior: none;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-bg {
    background-color: var(--color-bg);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-\[6\.25rem_0\.9375rem_1\.5625rem\] {
    padding: 6.25rem 0.9375rem 1.5625rem;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-20 {
    padding-inline: calc(var(--spacing) * 20);
  }
  .px-\[15px\] {
    padding-inline: 15px;
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-\[0\.625rem\] {
    padding-block: 0.625rem;
  }
  .py-\[7px\] {
    padding-block: 7px;
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .text-justify {
    text-align: justify;
  }
  .text-\[0\.8125rem\] {
    font-size: 0.8125rem;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#2c3131\] {
    color: #2c3131;
  }
  .text-main {
    color: var(--color-main);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .\[hostname\:port\] {
    hostname: port;
  }
  .before\:fixed {
    &::before {
      content: var(--tw-content);
      position: fixed;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:-left-full {
    &::before {
      content: var(--tw-content);
      left: -100%;
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:h-13\.75 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 13.75);
    }
  }
  .before\:w-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:duration-300 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .before\:ease-in-out {
    &::before {
      content: var(--tw-content);
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .sm\:min-h-\[35px\] {
    @media (width >= 40rem) {
      min-height: 35px;
    }
  }
  .sm\:w-40 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 40);
    }
  }
  .sm\:w-\[17px\] {
    @media (width >= 40rem) {
      width: 17px;
    }
  }
  .sm\:max-w-full {
    @media (width >= 40rem) {
      max-width: 100%;
    }
  }
  .sm\:gap-5 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .sm\:px-\[15px\] {
    @media (width >= 40rem) {
      padding-inline: 15px;
    }
  }
  .sm\:py-\[7px\] {
    @media (width >= 40rem) {
      padding-block: 7px;
    }
  }
  .sm\:text-\[13px\] {
    @media (width >= 40rem) {
      font-size: 13px;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:min-h-\[38px\] {
    @media (width >= 48rem) {
      min-height: 38px;
    }
  }
  .md\:min-h-\[80px\] {
    @media (width >= 48rem) {
      min-height: 80px;
    }
  }
  .md\:w-5 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 5);
    }
  }
  .md\:w-\[20px\] {
    @media (width >= 48rem) {
      width: 20px;
    }
  }
  .md\:w-\[145px\] {
    @media (width >= 48rem) {
      width: 145px;
    }
  }
  .md\:w-\[160px\] {
    @media (width >= 48rem) {
      width: 160px;
    }
  }
  .md\:grid-cols-\[275px_1fr_auto\] {
    @media (width >= 48rem) {
      grid-template-columns: 275px 1fr auto;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-10 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .md\:justify-self-center {
    @media (width >= 48rem) {
      justify-self: center;
    }
  }
  .md\:px-\[20px\] {
    @media (width >= 48rem) {
      padding-inline: 20px;
    }
  }
  .md\:py-\[7px\] {
    @media (width >= 48rem) {
      padding-block: 7px;
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:text-\[14px\] {
    @media (width >= 48rem) {
      font-size: 14px;
    }
  }
  .lg\:relative {
    @media (width >= 64rem) {
      position: relative;
    }
  }
  .lg\:top-auto {
    @media (width >= 64rem) {
      top: auto;
    }
  }
  .lg\:left-auto {
    @media (width >= 64rem) {
      left: auto;
    }
  }
  .lg\:grid {
    @media (width >= 64rem) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:min-h-20 {
    @media (width >= 64rem) {
      min-height: calc(var(--spacing) * 20);
    }
  }
  .lg\:min-h-\[48px\] {
    @media (width >= 64rem) {
      min-height: 48px;
    }
  }
  .lg\:min-h-\[80px\] {
    @media (width >= 64rem) {
      min-height: 80px;
    }
  }
  .lg\:w-\[28px\] {
    @media (width >= 64rem) {
      width: 28px;
    }
  }
  .lg\:grid-cols-\[275px_1fr_auto\] {
    @media (width >= 64rem) {
      grid-template-columns: 275px 1fr auto;
    }
  }
  .lg\:grid-cols-\[auto_1fr_auto\] {
    @media (width >= 64rem) {
      grid-template-columns: auto 1fr auto;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:gap-5 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:gap-10 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-x-5 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:gap-y-1 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 1);
    }
  }
  .lg\:justify-self-center {
    @media (width >= 64rem) {
      justify-self: center;
    }
  }
  .lg\:bg-inherit {
    @media (width >= 64rem) {
      background-color: inherit;
    }
  }
  .lg\:p-0 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .lg\:px-\[30px\] {
    @media (width >= 64rem) {
      padding-inline: 30px;
    }
  }
  .lg\:py-\[7px\] {
    @media (width >= 64rem) {
      padding-block: 7px;
    }
  }
  .lg\:text-\[18px\] {
    @media (width >= 64rem) {
      font-size: 18px;
    }
  }
  .lg\:before\:hidden {
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .xl\:max-w-480 {
    @media (width >= 80rem) {
      max-width: calc(var(--spacing) * 480);
    }
  }
  .xl\:px-20 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 20);
    }
  }
  .\32 xl\:w-7 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 7);
    }
  }
  .\32 xl\:w-47\.5 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 47.5);
    }
  }
  .\32 xl\:gap-7\.5 {
    @media (width >= 96rem) {
      gap: calc(var(--spacing) * 7.5);
    }
  }
  .\32 xl\:gap-x-10 {
    @media (width >= 96rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .\32 xl\:text-lg {
    @media (width >= 96rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .\32 xl\:lg\:grid-cols-\[17rem_1fr_auto\] {
    @media (width >= 96rem) {
      @media (width >= 64rem) {
        grid-template-columns: 17rem 1fr auto;
      }
    }
  }
}
@layer components {
  .menu-link {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 10);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    color: #2c3131;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue);
      }
    }
    @media (width >= 64rem) {
      font-size: 0.9375rem;
    }
  }
  .active-icon-menu span {
    &:first-child {
      top: calc(1/2 * 100%) !important;
    }
    &:first-child {
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &:first-child {
      rotate: calc(45deg * -1);
    }
    &:first-child {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
    &:last-child {
      bottom: calc(1/2 * 100%) !important;
    }
    &:last-child {
      --tw-translate-y: calc(1/2 * 100%);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &:last-child {
      rotate: 45deg;
    }
    &:last-child {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
    &:nth-child(2) {
      --tw-scale-x: 0%;
      --tw-scale-y: 0%;
      --tw-scale-z: 0%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .btn-primary {
    position: relative;
    z-index: 4;
    display: inline-flex;
    min-height: calc(var(--spacing) * 9);
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-lg);
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: #05cdfe;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: #6b47fb;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    padding-inline: calc(var(--spacing) * 3.75);
    padding-block: calc(var(--spacing) * 1.75);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-white);
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
    &::before {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
    &::before {
      content: var(--tw-content);
      background-image: linear-gradient(#05cdfe 0%,#6b47fb 100%);
    }
    &::before {
      content: var(--tw-content);
      opacity: 0%;
    }
    &::before {
      content: var(--tw-content);
      transition-property: opacity;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
    &::before {
      content: var(--tw-content);
      --tw-ease: var(--ease-in);
      transition-timing-function: var(--ease-in);
    }
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          opacity: 100%;
        }
      }
    }
    @media (width >= 48rem) {
      min-height: calc(var(--spacing) * 9.5);
    }
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
    @media (width >= 96rem) {
      min-height: calc(var(--spacing) * 12);
    }
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 7.5);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}